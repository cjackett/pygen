[MASTER]
# Add your ignored directories here (e.g., temporary directory)
ignore=tests,temp

# Specify a configuration file.
rcfile=

# Python code to execute, usually for sys.path or sys.argv manipulation
# init-hook=

[FORMAT]
# Maximum number of characters on a single line.
max-line-length=120

# Regexp for a line that is allowed to be longer than the limit.
# ignore-long-lines=

[MESSAGES CONTROL]
# Disable the following messages:
# C0103: Invalid variable name.
# R0903: Too-few-public-methods
# R0913: Too many arguments.
# R0914: Too many local variables.
# R0915: Too many statements.
# W0622: Redefining built-in 'print' - Typer
# W1203: Use lazy % formatting in logging functions
disable=C0103,R0903,R0913,R0914,R0915,W0622,W1203

[DESIGN]
# Maximum number of branch for function / method body
max-branches=12
# Maximum number of return / exit points in a function / method
max-returns=6
# Maximum number of arguments for function / method
max-args=5
# Maximum number of attributes for a class (see R0902).
max-attributes=10

[TYPECHECK]
# List of module names for which member attributes should not be checked
# (useful for modules/projects where enums or other special constructs are used).
ignored-modules=

# List of module names for which member attributes should not be checked
# (useful for modules/projects where enums or other special constructs are used).
ignored-classes=

[IMPORTS]
# List of modules to be considered as standard import.
known-standard-library=

# List of module names that should not be considered as errors when they appear in import statements.
# known-modules=

[LOGGING]
# Format style used to check logging format string
# possible values: old, new, percent
logging-format-style=old

# Logging modules to check that the string format arguments are in logging function parameter format
logging-modules=logging

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__, __new__, setUp, __post_init__

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs

[VARIABLES]
# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the name of dummy variables (i.e. expected to not be used).
dummy-variables-rgx=_$|dummy

[REPORTS]
# Python expression which should return a score less than or equal to 10 (e.g., 8.0, 6.5, etc.).
evaluation = 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display the message.
msg-template={path}:{line}: [{msg_id}({symbol}), {obj}] {msg}

[SIMILARITIES]
# Minimum lines number of a similarity.
min-similarity-lines=4

[DOCSTRING]
# Minimum line length for functions/classes docstrings, shorter ones will be ignored.
docstring-min-length=10
